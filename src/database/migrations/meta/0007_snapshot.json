{
  "id": "6b6a5566-6637-4b18-bc09-c1c016572d6b",
  "prevId": "3135ab45-b3b9-4c31-b72e-9081dcb6d27d",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.test_network:chats": {
      "name": "test_network:chats",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "userId": {
          "name": "userId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "reciverId": {
          "name": "reciverId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "test_network:chats_userId_test_network:users_test_id_fk": {
          "name": "test_network:chats_userId_test_network:users_test_id_fk",
          "tableFrom": "test_network:chats",
          "tableTo": "test_network:users_test",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "test_network:chats_reciverId_test_network:users_test_id_fk": {
          "name": "test_network:chats_reciverId_test_network:users_test_id_fk",
          "tableFrom": "test_network:chats",
          "tableTo": "test_network:users_test",
          "columnsFrom": [
            "reciverId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "test_network:chats_id_unique": {
          "name": "test_network:chats_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      }
    },
    "public.test_network:comment": {
      "name": "test_network:comment",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "userId": {
          "name": "userId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "postId": {
          "name": "postId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "test_network:comment_userId_test_network:users_test_id_fk": {
          "name": "test_network:comment_userId_test_network:users_test_id_fk",
          "tableFrom": "test_network:comment",
          "tableTo": "test_network:users_test",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "test_network:comment_postId_test_network:posts_id_fk": {
          "name": "test_network:comment_postId_test_network:posts_id_fk",
          "tableFrom": "test_network:comment",
          "tableTo": "test_network:posts",
          "columnsFrom": [
            "postId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "test_network:comment_id_unique": {
          "name": "test_network:comment_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      }
    },
    "public.test_network:following": {
      "name": "test_network:following",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "test_network:following_userId_test_network:users_test_id_fk": {
          "name": "test_network:following_userId_test_network:users_test_id_fk",
          "tableFrom": "test_network:following",
          "tableTo": "test_network:users_test",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "test_network:following_id_test_network:users_test_id_fk": {
          "name": "test_network:following_id_test_network:users_test_id_fk",
          "tableFrom": "test_network:following",
          "tableTo": "test_network:users_test",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "id": {
          "name": "id",
          "columns": [
            "userId",
            "id"
          ]
        }
      },
      "uniqueConstraints": {}
    },
    "public.test_network:like": {
      "name": "test_network:like",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "postId": {
          "name": "postId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "test_network:like_userId_test_network:users_test_id_fk": {
          "name": "test_network:like_userId_test_network:users_test_id_fk",
          "tableFrom": "test_network:like",
          "tableTo": "test_network:users_test",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "test_network:like_postId_test_network:posts_id_fk": {
          "name": "test_network:like_postId_test_network:posts_id_fk",
          "tableFrom": "test_network:like",
          "tableTo": "test_network:posts",
          "columnsFrom": [
            "postId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "likeId": {
          "name": "likeId",
          "columns": [
            "postId",
            "userId"
          ]
        }
      },
      "uniqueConstraints": {}
    },
    "public.test_network:message": {
      "name": "test_network:message",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "senderId": {
          "name": "senderId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "textContent": {
          "name": "textContent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "chatId": {
          "name": "chatId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "reciverId": {
          "name": "reciverId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "read": {
          "name": "read",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "messageType": {
          "name": "messageType",
          "type": "messageType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'text'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "test_network:message_senderId_test_network:users_test_id_fk": {
          "name": "test_network:message_senderId_test_network:users_test_id_fk",
          "tableFrom": "test_network:message",
          "tableTo": "test_network:users_test",
          "columnsFrom": [
            "senderId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "test_network:message_chatId_test_network:chats_id_fk": {
          "name": "test_network:message_chatId_test_network:chats_id_fk",
          "tableFrom": "test_network:message",
          "tableTo": "test_network:chats",
          "columnsFrom": [
            "chatId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "test_network:message_reciverId_test_network:users_test_id_fk": {
          "name": "test_network:message_reciverId_test_network:users_test_id_fk",
          "tableFrom": "test_network:message",
          "tableTo": "test_network:users_test",
          "columnsFrom": [
            "reciverId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "test_network:message_id_unique": {
          "name": "test_network:message_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      }
    },
    "public.test_network:notifications": {
      "name": "test_network:notifications",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "userId": {
          "name": "userId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "itemId": {
          "name": "itemId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "textContent": {
          "name": "textContent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "read": {
          "name": "read",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "type": {
          "name": "type",
          "type": "type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "test_network:notifications_userId_test_network:users_test_id_fk": {
          "name": "test_network:notifications_userId_test_network:users_test_id_fk",
          "tableFrom": "test_network:notifications",
          "tableTo": "test_network:users_test",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.test_network:posts": {
      "name": "test_network:posts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "userId": {
          "name": "userId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "textContent": {
          "name": "textContent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "likesCount": {
          "name": "likesCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "commentCount": {
          "name": "commentCount",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "test_network:posts_userId_test_network:users_test_id_fk": {
          "name": "test_network:posts_userId_test_network:users_test_id_fk",
          "tableFrom": "test_network:posts",
          "tableTo": "test_network:users_test",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "test_network:posts_id_unique": {
          "name": "test_network:posts_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      }
    },
    "public.test_network:postsPicture": {
      "name": "test_network:postsPicture",
      "schema": "",
      "columns": {
        "postId": {
          "name": "postId",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "url": {
          "name": "url",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "test_network:postsPicture_postId_test_network:posts_id_fk": {
          "name": "test_network:postsPicture_postId_test_network:posts_id_fk",
          "tableFrom": "test_network:postsPicture",
          "tableTo": "test_network:posts",
          "columnsFrom": [
            "postId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.test_network:profile": {
      "name": "test_network:profile",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
          "type": "serial",
          "primaryKey": false,
          "notNull": true
        },
        "ProfilePic": {
          "name": "ProfilePic",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "backgroundPic": {
          "name": "backgroundPic",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "text": {
          "name": "text",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "test_network:profile_userId_test_network:users_test_id_fk": {
          "name": "test_network:profile_userId_test_network:users_test_id_fk",
          "tableFrom": "test_network:profile",
          "tableTo": "test_network:users_test",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.test_network:users_test": {
      "name": "test_network:users_test",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "providerId": {
          "name": "providerId",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "displayName": {
          "name": "displayName",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "username": {
          "name": "username",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'local'"
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'user'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "test_network:users_test_id_unique": {
          "name": "test_network:users_test_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        },
        "test_network:users_test_username_unique": {
          "name": "test_network:users_test_username_unique",
          "nullsNotDistinct": false,
          "columns": [
            "username"
          ]
        },
        "provider and username": {
          "name": "provider and username",
          "nullsNotDistinct": false,
          "columns": [
            "username",
            "provider"
          ]
        }
      }
    }
  },
  "enums": {
    "public.messageType": {
      "name": "messageType",
      "schema": "public",
      "values": [
        "image",
        "text"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}